<Application x:Class="BloodBank.View.App"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 xmlns:ignore="http://www.galasoft.ch/ignore"
			 xmlns:system="clr-namespace:System;assembly=mscorlib"
			 xmlns:converters="clr-namespace:BloodBank.View.Converters"
			 xmlns:s="https://github.com/canton7/Stylet"
			 xmlns:dragablz="http://dragablz.net/winfx/xaml/dragablz"
			 xmlns:viewModel="clr-namespace:BloodBank.ViewModel;assembly=BloodBank.ViewModel"
			 xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
			 xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
			 mc:Ignorable="d ignore">

    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>

                <!-- Stylet Inizialization -->
                <s:ApplicationLoader>
                    <s:ApplicationLoader.Bootstrapper>
                        <viewModel:Bootstrapper />
                    </s:ApplicationLoader.Bootstrapper>
                </s:ApplicationLoader>

                <!-- Material Design theme XAML Resources -->
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/themes/generic.xaml" />

                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Red.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Yellow.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Dragablz;component/Themes/materialdesign.xaml" />

                <!-- MahApps theme Resources -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />

                <!-- FilterControl theme Resources -->
                <ResourceDictionary Source="Resources/FilterControl.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!-- Material Design theme for MahApps -->
            <SolidColorBrush x:Key="HighlightBrush" Color="{DynamicResource Primary700}" />
            <SolidColorBrush x:Key="AccentColorBrush" Color="{DynamicResource Primary500}" />
            <SolidColorBrush x:Key="AccentColorBrush2" Color="{DynamicResource Primary400}" />
            <SolidColorBrush x:Key="AccentColorBrush3" Color="{DynamicResource Primary300}" />
            <SolidColorBrush x:Key="AccentColorBrush4" Color="{DynamicResource Primary200}" />
            <SolidColorBrush x:Key="WindowTitleColorBrush" Color="{DynamicResource Primary700}" />
            <SolidColorBrush x:Key="AccentSelectedColorBrush" Color="{DynamicResource Primary500Foreground}" />
            <LinearGradientBrush x:Key="ProgressBrush" EndPoint="0.001,0.5" StartPoint="1.002,0.5">
                <GradientStop Color="{DynamicResource Primary700}" Offset="0" />
                <GradientStop Color="{DynamicResource Primary300}" Offset="1" />
            </LinearGradientBrush>
            <SolidColorBrush x:Key="CheckmarkFill" Color="{DynamicResource Primary500}" />
            <SolidColorBrush x:Key="RightArrowFill" Color="{DynamicResource Primary500}" />
            <SolidColorBrush x:Key="IdealForegroundColorBrush" Color="{DynamicResource Primary500Foreground}" />
            <SolidColorBrush x:Key="IdealForegroundDisabledBrush" Color="{DynamicResource Primary500}" Opacity="0.4" />

            <!-- Converters -->
            <converters:StringToPackIconConverter x:Key="StringToPackIcon" />
            <converters:BoolInverterConverter x:Key="BoolInverter" />
            <converters:BoolToVisibilityConverter x:Key="BoolToVisibility" TrueValue="Visible" FalseValue="Collapsed" />
            <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityInverted" TrueValue="Collapsed" FalseValue="Visible" />
            <converters:BoolToStringConverter x:Key="BoolToSiNo" TrueValue="Sì" FalseValue="No" />
            <converters:EnumDisplayAttributeOrHumanizeConverter x:Key="EnumToString" />
            <converters:CollectionToDataTableConverter x:Key="CollectionToDataTable" />

            <system:Boolean x:Key="True">True</system:Boolean>
            <system:Boolean x:Key="False">False</system:Boolean>

            <!-- Material Design theme for Dragablz -->
            <Style TargetType="{x:Type dragablz:TabablzControl}" BasedOn="{StaticResource MaterialDesignTabablzControlStyle}">
                <Setter Property="EmptyHeaderSizingHint" Value="PreviousTab" />
            </Style>

            <!-- Card-styled ContentControl -->
            <Style x:Key="CardContentControlStyle" TargetType="ContentControl">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ContentControl}">
                            <ScrollViewer VerticalScrollBarVisibility="Auto">
                                <StackPanel Margin="0 10">
                                    <md:Card Margin="20 10" Padding="10 0 10 30" MaxWidth="1000">
                                        <StackPanel>
                                            <ContentPresenter />
                                        </StackPanel>
                                    </md:Card>
                                </StackPanel>
                            </ScrollViewer>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Stylet support for Dragablz -->
            <Style BasedOn="{StaticResource {x:Type dragablz:TabablzControl}}" TargetType="dragablz:TabablzControl" x:Key="StyletConductorTabablzControl">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="ItemsSource" Value="{Binding Items}" />
                <Setter Property="SelectedItem" Value="{Binding ActiveItem}" />
                <Setter Property="HeaderItemTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <TextBlock Text="{Binding DisplayName}" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <ContentControl Style="{StaticResource CardContentControlStyle}" s:View.Model="{Binding }" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Remove extra padding on ListBox Items -->
            <Style x:Key="NoPaddingMaterialDesignListBoxItem" BasedOn="{StaticResource MaterialDesignListBoxItem}" TargetType="{x:Type ListBoxItem}">
                <Setter Property="Padding" Value="0" />
            </Style>
            <Style TargetType="{x:Type ListBox}" BasedOn="{StaticResource MaterialDesignListBox}">
                <Setter Property="ItemContainerStyle" Value="{StaticResource NoPaddingMaterialDesignListBoxItem}" />
            </Style>

            <!-- EditableViewModel Helper Icon -->
            <Style x:Key="EditableHelperIconStyle" TargetType="{x:Type md:PackIcon}">
                <Setter Property="Visibility" Value="Hidden" />
                <Setter Property="Kind" Value="CheckCircleOutline" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsChanged}" Value="True">
                        <Setter Property="Visibility" Value="Visible" />
                        <Setter Property="Kind" Value="Alert" />
                        <Setter Property="Foreground" Value="Orange" />
                        <Setter Property="ToolTip" Value="Modifiche in sospeso" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding HasErrors}" Value="True">
                        <Setter Property="Visibility" Value="Visible" />
                        <Setter Property="Kind" Value="Alert" />
                        <Setter Property="Foreground" Value="Red" />
                        <Setter Property="ToolTip" Value="Errori da risolvere" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="EditableInitializedHelperIconStyle" TargetType="{x:Type md:PackIcon}">
                <Setter Property="Visibility" Value="Visible" />
                <Setter Property="Kind" Value="ContentSave" />
                <Setter Property="Foreground" Value="Red" />
                <Setter Property="ToolTip" Value="Mai salvato" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsInitialized}" Value="True">
                        <Setter Property="Visibility" Value="Hidden" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            
            <!-- Material Design theme for XCTK Wizard -->
            <Style TargetType="{x:Type xctk:Wizard}">
                <Setter Property="BackButtonContent" Value="INDIETRO" />
                <Setter Property="NextButtonContent" Value="AVANTI" />
                <Setter Property="CancelButtonContent" Value="CANCELLA" />
                <Setter Property="FinishButtonContent" Value="FINISCI" />
                <Setter Property="HelpButtonVisibility" Value="Hidden" />
                <Setter Property="CancelButtonClosesWindow" Value="False" />
                <Setter Property="FinishButtonClosesWindow" Value="False" />
                <Setter Property="Background" Value="{StaticResource MaterialDesignBackground}" />
                <Setter Property="BorderBrush" Value="{StaticResource MaterialDesignDivider}" />
                <Setter Property="BorderThickness" Value="0" />
                <Style.Resources>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignFlatButton}">
                    </Style>
                </Style.Resources>
            </Style>
            <Style TargetType="{x:Type xctk:WizardPage}">
                <Setter Property="PageType" Value="Interior" />
                <Style.Triggers>
                    <Trigger Property="PageType" Value="Blank">
                        <Setter Property="Background" Value="{StaticResource MaterialDesignPaper}" />
                    </Trigger>
                    <Trigger Property="PageType" Value="Exterior">
                        <Setter Property="Background" Value="{StaticResource MaterialDesignPaper}" />
                        <Setter Property="ExteriorPanelBackground" Value="{DynamicResource PrimaryHueLightBrush}" />
                    </Trigger>
                    <Trigger Property="PageType" Value="Interior">
                        <Setter Property="Background" Value="{StaticResource MaterialDesignPaper}" />
                        <Setter Property="BorderBrush" Value="{StaticResource MaterialDesignDivider}" />
                        <Setter Property="HeaderBackground" Value="{StaticResource MaterialDesignBackground}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

        </ResourceDictionary>
    </Application.Resources>
</Application>